1.
다음에 설명하는 것은 무엇일까요?
마이크로소프트가 개발한 소스 코드 편집기이며 웹 개발(특히 JaveScript개발)에 많이 사용하는 오픈 소스 툴이다. 
코드 자동 완성, 구문 강조, 디버깅 지원, Git 제어 기능 등이 포함되어 있으며, 사용자가 여러 확장 프로그램을 설치하여 다양한 편의 기능을 사용할 수 있다.

Visual Studio Code(vscode)

2.
다음에 설명하는 것은 무엇일까요?
컴퓨터 파일의 변경 사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 대표적인 버전 관리 시스템이다.
이것을 사용하면 파일을 물리적으로 백업하지 않아도 변경 이력을 기록한다.
그 결과 자유자재로 이전 내용으로 돌아갈 수 있으며, 과거 작업내용 열람도 가능하다.

git

3.
다음에 설명하는 것은 무엇일까요?
개발 단계에서 이것을 사용하면 임시로 로컬(자신의 컴퓨터 환경) 서버를 오픈할 수 있다.
주로 내가 만든 웹 페이지의 결과를 확인하기 위해 사용한다.

Live Server

4.
다음에 설명하는 것은 무엇일까요?
git 사용 프로젝트의 가장 대표적인 온라인 저장 공간 웹 서비스이다.
여기에 올려두면 어디서든 누구와도 버전 관리가 가능하며 이를 원격 저장소(remote repository)라 부른다.

GitHub

5.
로컬에 설치된 git의 버전을 확인하는 명령어를 작성해 보세요.

git --version

6.
로컬(사용자PC)에 git을 설치하고 최초 1회 사용자 정보를 전역(global)으로 설정해주어야 한다.
이때 설정한 사용자 정보는 커밋(버전 생성)을 만드는데 사용된다.
사용자 정보 등록을 위한 명령어를 작성해 보세요.

git config --global user.name "YOUR_NAME"
git config --global user.email "YOUR_EMAIL"

7.
git을 쓰기 위해 해당 프로젝트(폴더)를 git 프로젝트로 만드는 git 초기화 명령어를 작성해 보세요.
이 명령어를 수행하고 나면 .git 이라는 숨긴 폴더가 하나 생성되는데 이를 로컬 저장소(local repository)라 부른다.

git init

8.
커밋(버전)으로 만들 파일을 고르기 위한 명령어로 모든 파일의 변경사항을 추적하도록 지정하고 
커밋(버전)을 만들 준비단계인 stage(index) 영역에 올리는 명령어를 작성해 보세요.

git add .

9.
"로그인 기능 추가" 라는 커밋메시지로 커밋(버전)을 만드는 명령어를 작성해 보세요.

git commit -m "로그인 기능 추가"

10.
backup 이라는 별칭으로 아래 원격 저장소를 연결하는 명령어를 작성해 보세요.
https://github.com/abcdef/study_backup.git

git remote add backup https://github.com/abcdef/study_backup.git

11.
origin 이라는 별칭의 원격 저장소로 로컬 main 브랜치의 커밋 내역을 전송(업로드)하는 명령어를 작성해 보세요.

git push origin main

12.
원격 저장소에 올린 아래 프로젝트를 내 로컬에 복제하는 명령어를 작성해 보세요.
https://github.com/abcdef/study_backup.git

git clone https://github.com/abcdef/study_backup.git

13. 
origin 이라는 별칭의 원격 저장소에 있는 main 브랜치 내용을 가져와서 로컬 저장소에 합치는 명령어를 작성해 보세요.
이걸 해주면 로컬이 최신 상태가 되기 때문에 git push가 가능해진다.
변동사항이 생겼다면 꼭 이것을 하고 나서 git push를 해야된다.

git pull origin main